include defs.ninja

b = build
p = keccak
t = $p/tests
sponge = keccak/sponge/sponge.c
kp = $p/keccak/keccakp-1600
kf = $p/keccak/keccakf-1600
f = $p/fips202
sha3 = $p/fips202/sha3
shake = $p/fips202/shake

rule cat_always_inline
  command = cat $in | sed -e 's/inline /inline __attribute__((always_inline)) /' > $out
rule cat
  command = cat $in > $out
rule ginger
  command = ./scripts/ginger.py $in > $out

keccakimpl = $p/keccak/keccakf-1600/keccakf-opt64.c

build $f/sha3.c: ginger $f/sha3.c.in
build $f/shake.c: ginger $f/shake.c.in
build keccak.h: ginger keccak.h.in

build $b/libkeccak.c: cat_always_inline $keccakimpl $
  $p/constructions/sponge.c $
  $p/keccak/keccakf.c $
  $f/sha3.c $f/shake.c

cflags = $cflags_optim
build $b/sponge.o: c keccak/constructions/sponge.c
build $b/sha3.o: c keccak/fips202/sha3.c
build $b/shake.o: c keccak/fips202/shake.c
build $b/keccakf_stub.o: c $p/keccak/keccakf.c
build $b/keccakf.o: c_optim $keccakimpl
build $b/libkeccak.$so: dylib $
  $b/keccakf.o $b/keccakf_stub.o $
  $b/sponge.o $
  $b/sha3.o $b/shake.o $
  $b/libutil.dylib

lkc = $b/libkeccak.$so
build $b/alignment-mc: cexec $t/alignment-keccakf-mc.c $lkc
build $b/test-kats: cexec $t/test-kats.c $lkc

rule testkats
  command = $b/test-kats > $out
rule diffkats
  command = diff $in $t/keccak_kats/kats_combined.txt > $out

build $b/kats.txt: testkats
#build $b/kats-diff.txt: diffkats $b/kats.txt

# The utility library
s = libutil
subninja libutil/build.ninja

# Verification
#include ninjas/buildlines.ninja
#include ninjas/tools/ccomp.ninja
